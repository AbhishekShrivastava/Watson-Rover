[{
    "type": "tab",
    "id": "490dfac4.eaaf2c",
    "label": "Sudhee"
}, {
    "type": "tab",
    "id": "6af3725d.b05624",
    "label": "Sayan"
}, {
    "type": "tab",
    "id": "7532a74f.93509",
    "label": "Meera"
}, {
    "type": "tab",
    "id": "9296b025.64e928",
    "label": "Suku"
}, {
    "id": "a5ad7720.0257d",
    "type": "serial-port",
    "serialport": "/dev/ttyACM0",
    "serialbaud": "9600",
    "databits": "8",
    "parity": "none",
    "stopbits": "1",
    "newline": "\\n",
    "bin": "false",
    "out": "char",
    "addchar": "false"
}, {
    "id": "8e51ba9b.6148b",
    "type": "mqtt-broker",
    "broker": "npwvlf.messaging.internetofthings.ibmcloud.com",
    "port": "1883",
    "clientid": "d:npwvlf:iotsample-raspberrypi:b827ebcee999"
}, {
    "id": "3eccd810.32d498",
    "type": "serial-port",
    "serialport": "/dev/ttyACM0",
    "serialbaud": "9600",
    "databits": "8",
    "parity": "none",
    "stopbits": "1",
    "newline": "",
    "bin": "false",
    "out": null,
    "addchar": "false"
}, {
    "id": "f5901d94.60f1b",
    "type": "mqtt-broker",
    "broker": "npwvlf.messaging.internetofthings.ibmcloud.com",
    "port": "1883",
    "clientid": ""
}, {
    "id": "67c34df.04be5b4",
    "type": "mqtt out",
    "name": "To Watson language APIs",
    "topic": "iot-2/evt/status/fmt/json",
    "qos": "0",
    "retain": "false",
    "broker": "8e51ba9b.6148b",
    "x": 979,
    "y": 702,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "910dc96f.ea8ed8",
    "type": "mqtt in",
    "name": "Receive Command",
    "topic": "iot-2/cmd/reboot/fmt/json",
    "broker": "8e51ba9b.6148b",
    "x": 114,
    "y": 181,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["3b78ab64.27d3d4", "798a7ef7.aacfc"]
    ]
}, {
    "id": "efcbf5cb.59af28",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 310,
    "y": 188,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "3b78ab64.27d3d4",
    "type": "function",
    "name": "Extract direction",
    "func": "var obj = {payload: msg.payload};\nvar json = JSON.parse(obj.payload);\nvar direct = json.dir;\nvar dirStr = String.fromCharCode(48+direct);\nvar newMsg = {payload:dirStr};\nreturn newMsg;",
    "outputs": 1,
    "x": 259,
    "y": 247,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["efcbf5cb.59af28", "b0618168.26d2a8"]
    ]
}, {
    "id": "2ac66b08.533314",
    "type": "serial out",
    "name": "To Arduino",
    "serial": "3eccd810.32d498",
    "x": 774,
    "y": 71,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "798a7ef7.aacfc",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 283,
    "y": 132,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "2107fb2c.9cd01c",
    "type": "serial in",
    "name": "Serial in",
    "serial": "a5ad7720.0257d",
    "x": 55.5,
    "y": 865,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["bbbd948a.5e6c78", "c4c58c3a.3b3a7"]
    ]
}, {
    "id": "bbbd948a.5e6c78",
    "type": "debug",
    "name": "Input Message",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 158.5,
    "y": 695,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "64364aa1.236e94",
    "type": "debug",
    "name": "Payload",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 329,
    "y": 490,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "d99954b.7c4d728",
    "type": "function",
    "name": "Extract distance",
    "func": "var ardMsg = msg.payload;\nardMsg = ardMsg.replace(/\\/n/gm,\"\");\nif (ardMsg == 0) ardMsg = 2;\nvar newMsg = ardMsg / 2;\nreturn {payload:newMsg};",
    "outputs": 1,
    "x": 203,
    "y": 539,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["64364aa1.236e94", "795f6b65.08e1ac"]
    ]
}, {
    "id": "7ed42325.5f694c",
    "type": "exec",
    "command": "/home/pi/Watson/OCR/run_ocr_2.sh",
    "append": "",
    "useSpawn": "",
    "name": "Acquire Image and perform OCR",
    "x": 665,
    "y": 649,
    "z": "490dfac4.eaaf2c",
    "wires": [
        [],
        ["b0af2b13.0cdee8"],
        []
    ]
}, {
    "id": "b0af2b13.0cdee8",
    "type": "file in",
    "name": "Read OCR output",
    "filename": "/home/pi/Watson/OCR/output2.txt",
    "format": "utf8",
    "x": 647,
    "y": 518,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["a03f7862.fbf478", "839a38c3.3b1ed"]
    ]
}, {
    "id": "430da37f.4cfaac",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 963,
    "y": 546,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "44376607.a6b4b8",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "none",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 391,
    "y": 535,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["7ed42325.5f694c"]
    ]
}, {
    "id": "839a38c3.3b1ed",
    "type": "function",
    "name": "Perform cleanup",
    "func": "var rCmd = msg.payload;\nrCmd = rCmd.replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, \" \");\nrCmd = rCmd.replace(/[l]/g, \"I\");\nrCmd = rCmd.replace(/[|]/g, \"I\");\nrCmd = rCmd.replace(/[a-z]/g, \" \");\nrCmd = rCmd.replace(/[0-9]/g, \" \");\nrCmd = rCmd.replace(/\\W/g, \" \");\nvar newMsg = \"\\\"\"+ rCmd + \"\\\"\";\nreturn {payload:newMsg};",
    "outputs": 1,
    "x": 847,
    "y": 593,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["430da37f.4cfaac", "67c34df.04be5b4"]
    ]
}, {
    "id": "a03f7862.fbf478",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 811,
    "y": 489,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "c425ae6a.a010a8",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "3",
    "payloadType": "none",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 87,
    "y": 110,
    "z": "7532a74f.93509",
    "wires": [
        ["2d635e9f.c44f6a"]
    ]
}, {
    "id": "dab041ac.cc23a8",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 483,
    "y": 106,
    "z": "7532a74f.93509",
    "wires": []
}, {
    "id": "2d635e9f.c44f6a",
    "type": "function",
    "name": "Global Variable Test",
    "func": "\nif (context.global.gVar == 1) return \"yes\";\nelse return \"no\";\n",
    "outputs": 1,
    "x": 273,
    "y": 160,
    "z": "7532a74f.93509",
    "wires": [
        ["dab041ac.cc23a8"]
    ]
}, {
    "id": "795f6b65.08e1ac",
    "type": "exec",
    "command": "/home/pi/Watson/Navigation/search_target.sh",
    "append": "",
    "useSpawn": "",
    "name": "Acquire target position",
    "x": 405,
    "y": 706,
    "z": "490dfac4.eaaf2c",
    "wires": [
        [],
        ["a87364a9.77d948"],
        []
    ]
}, {
    "id": "a87364a9.77d948",
    "type": "file in",
    "name": "Target position output",
    "filename": "/home/pi/Watson/Navigation/image_search_op.txt",
    "format": "utf8",
    "x": 324,
    "y": 843,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["6c1fe2de.23eb2c", "b57e2db4.7634c"]
    ]
}, {
    "id": "6c1fe2de.23eb2c",
    "type": "debug",
    "name": "Position o/p",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 451,
    "y": 927,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "8ecec075.f102e",
    "type": "function",
    "name": "Ascertain rover action",
    "func": "var close_flag = 0;\n// Ascertain current coordinates\nvar coOrd = (msg.payload).split(\",\");\nvar xOrd = parseFloat(coOrd[0]);\nvar yOrd = parseFloat(coOrd[1]);\nvar dist = parseFloat(coOrd[2]);\nvar xDev = 0;\n\nif (dist == 3) {\n\ttarget_xOrd = 275;\n\txDev = 40;\n} else if (dist == 2.5) {\n\ttarget_xOrd = 280;\n\txDev = 30;\n} else if (dist == 2.0) {\n\ttarget_xOrd = 280;\n\txDev = 20;\n} else if (dist == 1.5) {\n\ttarget_xOrd = 270;\n\txDev = 20;\n} else if (dist == 1) {\n\ttarget_xOrd = 510;\n\txDev = 40;\n} else if (dist < 1) {\n\ttarget_xOrd = 510;\n\tclose_flag = 1;\n} else {\n\ttarget_xOrd = 230;\n}\n\nvar xDeviation = xOrd / target_xOrd;\nvar xDiff = Math.abs(xOrd - target_xOrd);\nconsole.log(xDeviation);\nconsole.log(xDiff);\n\nif ((xDeviation > 1) && (xDiff > xDev)) {\n\t// turn bit right\n\tif (dist > 1.5) {\n\t\tvar rpiResponse = 4;\n\t} \n\telse if (dist <= 1.5) {\n\t\tvar rpiResponse = 6;\n\t}\n} \nelse if ((xDeviation < 1) && (xDiff > xDev)) {\n\t// turn bit left\n\tif (dist > 1.5) {\n\t\tvar rpiResponse = 3;\n\t}\n\telse if (dist <= 1.5) {\n\t\tvar rpiResponse = 5;\n\t}\n}\nelse if ((xDiff <= xDev) && (close_flag == 0)) {\n\t// move forward or proceed to OCR\n\tif (dist <= 1) {\n\t\tvar rpiResponse = 0;\n\t}\n\telse {\n\t\tvar rpiResponse = 7;\n\t}\n}\n\nreturn {payload:rpiResponse};",
    "outputs": 1,
    "x": 733,
    "y": 970,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["bb9b05f.c5cf678", "202ef991.dfd106"]
    ]
}, {
    "id": "b57e2db4.7634c",
    "type": "function",
    "name": "Do cleanup",
    "func": "return {payload:msg.payload};",
    "outputs": 1,
    "x": 500,
    "y": 811,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["f8e0ec9d.372648"]
    ]
}, {
    "id": "f8e0ec9d.372648",
    "type": "switch",
    "name": "",
    "property": "payload",
    "rules": [{
        "t": "eq",
        "v": -1,
        "v2": 0
    }, {
        "t": "else"
    }],
    "checkall": "true",
    "outputs": 2,
    "x": 601,
    "y": 882,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["7b8fcf50.614bb"],
        ["8ecec075.f102e"]
    ]
}, {
    "id": "7b8fcf50.614bb",
    "type": "function",
    "name": "Reposition",
    "func": "var ardMsg = 3; // turn left a bit\nreturn {payload:ardMsg};",
    "outputs": 1,
    "x": 701,
    "y": 839,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["47d053ea.8a71b4", "dbe5ef40.bd4ee"]
    ]
}, {
    "id": "47d053ea.8a71b4",
    "type": "serial out",
    "name": "To Arduino",
    "serial": "3eccd810.32d498",
    "x": 979,
    "y": 791,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "bb9b05f.c5cf678",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 828,
    "y": 1039,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "dbe5ef40.bd4ee",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 782,
    "y": 730,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "b0618168.26d2a8",
    "type": "switch",
    "name": "",
    "property": "payload",
    "rules": [{
        "t": "eq",
        "v": 1,
        "v2": 0
    }, {
        "t": "eq",
        "v": 2,
        "v2": 0
    }, {
        "t": "eq",
        "v": 9,
        "v2": 0
    }, {
        "t": "eq",
        "v": 8,
        "v2": 0
    }],
    "checkall": "true",
    "outputs": 4,
    "x": 435,
    "y": 234,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["2ac66b08.533314"],
        ["2ac66b08.533314"],
        ["b5df9816.779898", "f4d2f10.f0b2d1", "b7e914cd.4816e8"],
        ["2ac66b08.533314"]
    ]
}, {
    "id": "b5df9816.779898",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 613,
    "y": 236,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "f4d2f10.f0b2d1",
    "type": "exec",
    "command": "/home/pi/Watson/VR/VR_image_preProcess_v0.2.sh",
    "append": "",
    "useSpawn": "",
    "name": "Run Visual Reco",
    "x": 608,
    "y": 287.5,
    "z": "490dfac4.eaaf2c",
    "wires": [
        [],
        ["db511d75.24aee"],
        []
    ]
}, {
    "id": "db511d75.24aee",
    "type": "file in",
    "name": "Read VR output",
    "filename": "/home/pi/Watson/VR/vr_output.txt",
    "format": "utf8",
    "x": 764,
    "y": 362,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["6ee4f819.911b08", "ba43b42.f45bc48"]
    ]
}, {
    "id": "a50806ee.5af7f8",
    "type": "switch",
    "name": "",
    "property": "payload",
    "rules": [{
        "t": "lte",
        "v": -1,
        "v2": 0
    }, {
        "t": "else"
    }],
    "checkall": "true",
    "outputs": 2,
    "x": 757,
    "y": 148,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["37b63da6.c849c2"],
        ["b6437697.49bc88"]
    ]
}, {
    "id": "3388d793.cc7728",
    "type": "mqtt out",
    "name": "Request Bbone",
    "topic": "iot-2/evt/message/fmt/json",
    "qos": "",
    "retain": "",
    "broker": "8e51ba9b.6148b",
    "x": 1219,
    "y": 218,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "37b63da6.c849c2",
    "type": "function",
    "name": "Prep Bbone Req.",
    "func": "// Move to Voice Mode\ncontext.global.voiceMode = 1;\n// Initiate voice control\nvar sCmd = 1;\nreturn {payload:sCmd};",
    "outputs": 1,
    "x": 952,
    "y": 115,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["3388d793.cc7728"]
    ]
}, {
    "id": "6ee4f819.911b08",
    "type": "function",
    "name": "Process VR output",
    "func": "var vrOutput = msg.payload;\nvrOutput = vrOutput.replace(/[\"]/g, \"\");\n\n\n// if VR failed\nif (vrOutput <= -1) \n{\n\tvar errVal = -1;\n\treturn {payload:errVal};\n}\n\nvar opArr = vrOutput.split(\",\");\nvar firstCity = opArr[0];\nvar firstDir = opArr[1];\nvar secCity = opArr[2];\nvar secDir = opArr[3];\nconsole.log(firstCity);\nconsole.log(firstDir);\nconsole.log(secCity);\nconsole.log(secDir);\n\nvar dest = context.global.destination;\nif (firstCity == dest) {\n\tconsole.log(\"first city\");\n\tif (firstDir == \"left\") {\n\t\tconsole.log(\"left yes\");\n\t\tvar dir = 1;\n\t}\n\telse {\n\t\tconsole.log(\"right yes\");\n\t\tvar dir = 2;\n\t}\n}\nelse if (secCity == dest) {\n\tconsole.log(\"second city\");\n\tconsole.log(\"second Dir\");\n\tconsole.log(secDir);\n\tif (secDir == \"left\") {\n\t\tconsole.log(\"left yes\");\n\t\tvar dir = 1;\n\t}\n\telse {\n\t\tconsole.log(\"right yes\");\n\t\tvar dir = 2;\n\t}\n}\nelse {\n\t// destination info not available\n\tvar dir = -2;\n}\nreturn {payload:dir};",
    "outputs": 1,
    "x": 850,
    "y": 278,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["a50806ee.5af7f8", "6eefb9cf.911048"]
    ]
}, {
    "id": "b6437697.49bc88",
    "type": "serial out",
    "name": "To Arduino",
    "serial": "3eccd810.32d498",
    "x": 1070,
    "y": 263,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "841fa8f4.bd9ca8",
    "type": "comment",
    "name": "Flow 2: Process Bluemix / Watson response and control Rover",
    "info": "1. Receive language translation results and analyse\n2. If successful, pass instructions to Rover for execution\n3. If failure, initiate Visual Recognition function through external script\n4. If VR succeeds, pass instruction to Rover for execution\n5. Else, intimate Beaglebone to intimate human handler and receive voice command",
    "x": 225.5,
    "y": 51,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "4434ef06.99fbb8",
    "type": "comment",
    "name": "Flow 1: Arduino to Raspberry Pi - Navigation and OCR flow",
    "info": "1. Receive CommCode from Arduino\n2. If not still at decision point, perform visual navigation \nactivity; Communicate course correction instructions to Rover, if necessary\n3. If at decision point, perform imaging for OCR and pass \noutput to Watson for language identification and translation",
    "x": 215,
    "y": 403,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "4fe4019a.58c93",
    "type": "comment",
    "name": "Flow 3: Handle inputs from Voice commands",
    "info": "1. Receive command from Beaglebone\n2. Execute command\n3. If command was not for switch back to autonomous mode, \nrequest Beaglebone for next command and wait",
    "x": 188.5,
    "y": 1262,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "3dee449f.c211bc",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "none",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 241,
    "y": 756,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["795f6b65.08e1ac"]
    ]
}, {
    "id": "a4e3a421.5b1c58",
    "type": "inject",
    "name": "Test string",
    "topic": "",
    "payload": "\"testing new broker\"",
    "payloadType": "string",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 1023,
    "y": 71,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["3388d793.cc7728"]
    ]
}, {
    "id": "64207abf.9bdf84",
    "type": "mqtt in",
    "name": "From Bbone",
    "topic": "iot-2/cmd/bbone/fmt/json",
    "broker": "8e51ba9b.6148b",
    "x": 101,
    "y": 1384,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["9edeb4bb.612148", "77b9a434.88465c"]
    ]
}, {
    "id": "9edeb4bb.612148",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 240,
    "y": 1328,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "77b9a434.88465c",
    "type": "function",
    "name": "Extract Payload",
    "func": "return {payload:msg.payload};",
    "outputs": "1",
    "x": 267,
    "y": 1448,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["23e2237.fdc1ddc", "3ae7a9b9.c51856"]
    ]
}, {
    "id": "deec2143.2113e",
    "type": "serial out",
    "name": "To Arduino",
    "serial": "3eccd810.32d498",
    "x": 825,
    "y": 1443,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "3ae7a9b9.c51856",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 404,
    "y": 1368,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "23e2237.fdc1ddc",
    "type": "switch",
    "name": "Revert to Auto check",
    "property": "payload",
    "rules": [{
        "t": "eq",
        "v": "\"9\""
    }, {
        "t": "else"
    }],
    "checkall": "true",
    "outputs": 2,
    "x": 520,
    "y": 1445,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["8b3fd924.74c028"],
        ["deec2143.2113e"]
    ]
}, {
    "id": "77454868.88bab8",
    "type": "function",
    "name": "Set Global Variable",
    "func": "if (msg.payload == 1) {\n\tcontext.global.voiceMode = 1;\n} else {\n\tcontext.global.voiceMode = 0;\n}\nreturn context.global.voiceMode;",
    "outputs": 1,
    "x": 272,
    "y": 259,
    "z": "7532a74f.93509",
    "wires": [
        ["711c2474.8ee3dc"]
    ]
}, {
    "id": "14bc05d7.eb43fa",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "1",
    "payloadType": "string",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 129,
    "y": 219,
    "z": "7532a74f.93509",
    "wires": [
        ["77454868.88bab8", "5d86d31e.a2792c"]
    ]
}, {
    "id": "e6e6a925.191958",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "0",
    "payloadType": "string",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 123,
    "y": 309,
    "z": "7532a74f.93509",
    "wires": [
        ["77454868.88bab8"]
    ]
}, {
    "id": "711c2474.8ee3dc",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 464,
    "y": 264,
    "z": "7532a74f.93509",
    "wires": []
}, {
    "id": "5d86d31e.a2792c",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 299,
    "y": 217,
    "z": "7532a74f.93509",
    "wires": []
}, {
    "id": "c4c58c3a.3b3a7",
    "type": "function",
    "name": "Determine Voice Mode",
    "func": "// store input from Arduino\nvar input = msg.payload;\n\nif (context.global.voiceMode == 1) var vMode = 1;\nelse var vMode = 0;\n\nvar newMsg = {payload:input, \"vMode\":vMode};\nreturn newMsg;",
    "outputs": 1,
    "x": 128,
    "y": 991,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["e4484a42.1bb7b8", "4443051a.bbbcfc"]
    ]
}, {
    "id": "e4484a42.1bb7b8",
    "type": "switch",
    "name": "",
    "property": "vMode",
    "rules": [{
        "t": "eq",
        "v": 1,
        "v2": 0
    }, {
        "t": "else"
    }],
    "checkall": "true",
    "outputs": 2,
    "x": 223,
    "y": 907,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["8698b407.796748", "8341d781.7cbe28"],
        ["d99954b.7c4d728", "76f60a5e.8909f4"]
    ]
}, {
    "id": "8698b407.796748",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 389,
    "y": 987,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "76f60a5e.8909f4",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 348,
    "y": 1029,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "4443051a.bbbcfc",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 214,
    "y": 1062,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "8341d781.7cbe28",
    "type": "function",
    "name": "Prep Bbone Notification",
    "func": "// Inform Bbone that command executed\nvar rMsg = 2;\nreturn {payload:rMsg};",
    "outputs": 1,
    "x": 458,
    "y": 1108,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["d8eaee00.27151", "c85531a9.37aad"]
    ]
}, {
    "id": "d8eaee00.27151",
    "type": "mqtt out",
    "name": "To Bbone",
    "topic": "iot-2/evt/message/fmt/json",
    "qos": "",
    "retain": "",
    "broker": "8e51ba9b.6148b",
    "x": 707,
    "y": 1181,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "c85531a9.37aad",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 618,
    "y": 1066,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "8b3fd924.74c028",
    "type": "function",
    "name": "Revert to Auto",
    "func": "context.global.voiceMode = 0;\nvar ardMsg = 7; // move forward\nreturn {payload:ardMsg};",
    "outputs": 1,
    "x": 657,
    "y": 1380,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["deec2143.2113e"]
    ]
}, {
    "id": "974c4b57.68b3b8",
    "type": "comment",
    "name": "Intimate Bbone on voice command completion",
    "info": "",
    "x": 803,
    "y": 1137,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "a0cba2bb.5f346",
    "type": "comment",
    "name": "Handover to voice control",
    "info": "Message 1 - VR failed\nMessage 2 - VR successful; but can't find destination",
    "x": 1251,
    "y": 174,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "ba43b42.f45bc48",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 922,
    "y": 373,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "6eefb9cf.911048",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 1013,
    "y": 323,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "7567c1e2.8a984",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "none",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 575,
    "y": 388,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["db511d75.24aee"]
    ]
}, {
    "id": "202ef991.dfd106",
    "type": "switch",
    "name": "",
    "property": "payload",
    "rules": [{
        "t": "eq",
        "v": 0,
        "v2": 0
    }, {
        "t": "else"
    }],
    "checkall": "true",
    "outputs": 2,
    "x": 918,
    "y": 931,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["7ed42325.5f694c"],
        ["47d053ea.8a71b4", "af6f688b.509098"]
    ]
}, {
    "id": "b7e914cd.4816e8",
    "type": "function",
    "name": "Reverse Rover for VR",
    "func": "var ardMsg = 9; \nreturn {payload:ardMsg};",
    "outputs": 1,
    "x": 574,
    "y": 50,
    "z": "490dfac4.eaaf2c",
    "wires": [
        ["2ac66b08.533314"]
    ]
}, {
    "id": "af6f688b.509098",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 1049,
    "y": 976,
    "z": "490dfac4.eaaf2c",
    "wires": []
}, {
    "id": "5742a43f.a8bd5c",
    "type": "inject",
    "name": "Delhi",
    "topic": "",
    "payload": "delhi",
    "payloadType": "string",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 201,
    "y": 121,
    "z": "6af3725d.b05624",
    "wires": [
        ["9d5ac20c.62a54"]
    ]
}, {
    "id": "6f315b0c.90cea4",
    "type": "inject",
    "name": "Paris",
    "topic": "",
    "payload": "paris",
    "payloadType": "string",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 222,
    "y": 185,
    "z": "6af3725d.b05624",
    "wires": [
        ["9d5ac20c.62a54"]
    ]
}, {
    "id": "952fce07.6ad03",
    "type": "inject",
    "name": "New York",
    "topic": "",
    "payload": "nyork",
    "payloadType": "string",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 206,
    "y": 261,
    "z": "6af3725d.b05624",
    "wires": [
        ["9d5ac20c.62a54"]
    ]
}, {
    "id": "9d5ac20c.62a54",
    "type": "function",
    "name": "Set destination",
    "func": "dest = msg.payload;\ncontext.global.destination = dest;\nreturn {payload:dest};",
    "outputs": 1,
    "x": 430,
    "y": 187,
    "z": "6af3725d.b05624",
    "wires": [
        ["2eba8c43.d14574"]
    ]
}, {
    "id": "2eba8c43.d14574",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 630,
    "y": 146,
    "z": "6af3725d.b05624",
    "wires": []
}]
